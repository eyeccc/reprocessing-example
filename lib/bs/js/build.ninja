bs_package_flags = -bs-package-name reprocessing-example
src_root_dir = /Users/chihching/reprocessing-fruit-ninja
bsc = /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/lib/bsc.exe
bsdep = /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/lib/bsb_helper.exe
warnings = -w -30-40+6+7+27+32..39+44+45+101
bsc_flags = -bs-D BSB_BACKEND="js" -bs-D OS_TYPE="Darwin" -nostdlib -I '/Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/lib/ocaml' -color always -no-alias-deps
ppx_flags = 
bs_package_includes = -I /Users/chihching/reprocessing-fruit-ninja/node_modules/reprocessing/lib/ocaml/js
bs_package_dev_includes = 
namespace = 
build_artifacts_dir = /Users/chihching/reprocessing-fruit-ninja
ocaml_flags = -thread   -no-alias-deps   -color   always
ocaml_linker_flags = 
bs_super_errors_ocamlfind = -bs-super-errors
bs_super_errors = -bs-super-errors
external_deps_for_linking = 
ocamlc = /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/vendor/ocaml/ocamlc.opt
ocamlopt = /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/vendor/ocaml/ocamlopt.opt
ocamlfind = 
ocamlfind_dependencies = 
ocaml_dependencies = -add-ocaml-dependency bigarray -add-ocaml-dependency dynlink -add-ocaml-dependency nums -add-ocaml-dependency str -add-ocaml-dependency threads -add-ocaml-dependency unix
open_flag = 
bsb_helper_verbose = 
bsb_dir_group = 0
bsc_group_1_includes = 
bsc_group_2_includes = 
refmt = /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/lib/refmt.exe
reason_react_jsx = 
refmt_flags = --print binary
ocaml_lib_includes = -I /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/vendor/ocaml/lib/ocaml -I src
bsc_lib_includes = -I /Users/chihching/reprocessing-fruit-ninja/node_modules/bsb-native/lib/ocaml -I src
rule build_ast_and_module_sets_from_re
  command = ${bsc} -pp "${refmt} ${refmt_flags}" ${reason_react_jsx}  ${ppx_flags} ${bs_super_errors} ${warnings} ${bsc_flags} -c -o ${out} -bs-syntax-only -bs-binary-ast -impl ${in}
  description = [34mBuilding[39m [2m${out}[22m
build src/index.mlast : build_ast_and_module_sets_from_re $src_root_dir/src/index.re
rule build_deps
  command = ${bsdep} ${namespace} -g ${bsb_dir_group} -MD ${in}
  description = [34mBuilding[39m [2m${out}[22m
build src/index.mlast.d : build_deps src/index.mlast
rule build_cmj_cmi
  command = ${bsc} ${bs_package_flags} -bs-assume-no-mli -bs-no-builtin-ppx-ml -bs-no-implicit-include ${bs_package_includes} ${bsc_lib_includes} ${bsc_extra_includes} ${warnings} ${bsc_flags} -o ${out} -c  ${in} $postbuild
  depfile = ${in}.d
  description = [34mBuilding[39m [2m${out}[22m
build src/index.cmj |  $build_artifacts_dir/lib/js/src/index.js src/index.cmi : build_cmj_cmi src/index.mlast
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:$build_artifacts_dir/lib/js/src
build src/IndexHot.mlast : build_ast_and_module_sets_from_re $src_root_dir/src/IndexHot.re
build src/IndexHot.mlast.d : build_deps src/IndexHot.mlast
build src/IndexHot.cmj |  $build_artifacts_dir/lib/js/src/IndexHot.js src/IndexHot.cmi : build_cmj_cmi src/IndexHot.mlast
  bsc_flags = $bsc_flags -bs-re-out -bs-super-errors
  bs_package_flags = $bs_package_flags  -bs-package-output commonjs:$build_artifacts_dir/lib/js/src
build build.ninja : phony  ||  src/IndexHot.mlast.d src/index.mlast.d
